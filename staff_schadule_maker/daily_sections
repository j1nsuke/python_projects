import random
import datetime
from enum import Enum

class Section(Enum):
    d_30591 = "Day30591"
    d_30595 = "Day30595"
    d_30599 = "Day30599"
    d_30596 = "Day30596"
    d_Ifree = "ICUfree"
    d_30594 = 'Day30594'
    d_Efree = "EICUfree"
    n_30595 = "Nig30595"
    n_30599 = "Nig30599"
    n_30596 = "Nig30596"

class Daily_sections:
    def __init__(self, date:datetime.date) -> None:
        self.date = date
        self.day_section = {
                            Section.d_30591: None,
                            Section.d_30595: None,
                            Section.d_30599: None,
                            Section.d_30596: None,
                            Section.d_Ifree: [],
                            Section.d_30594: None,
                            Section.d_Efree: []
        }
        self.night_section ={
                            Section.n_30595: None,
                            Section.n_30599: None,
                            Section.n_30596: None
        }
    
    def find_assignable_staff(self, date, staffs):
        daily_assignable_staffs = []
        day_assignable = []
        night_assignable = []
        next_date = date + datetime.timedelta(days = 1)
        for staff in staffs:
            if date not in staff.ng_request:
                day_assignable.append(staff)
                if next_date not in staff.ng_request:
                    night_assignable.append(staff)
        daily_assignable_staffs = [day_assignable, night_assignable]
        return daily_assignable_staffs

    # 日夜連続勤務　要検討！
    def assign_main_staff(self, date, staff):
        while self.section_unfilled:
            staff = random.choice(staffs)
            # 30596の日勤、夜勤
            if staff.can_30596 and staff.can_work_day(date):
                self.day_section[Section.d_30596] = staff
                break
            if staff.can_30596 and staff.can_work_night(date):
                self.night_section[Section.n_30596] = staff
                break
            # 30595の日勤、夜勤
            if staff.can_30595 and staff.can_work_day(date):
                self.day_section[Section.d_30595] = staff
                break
            if staff.can_30595 and staff.can_work_night(date):
                self.night_section[Section.n_30595] = staff
                break
            # 30594の日勤
            if staff.can_30594 and staff.can_work_day(date):
                self.day_section[Section.d_30594] = staff
                break
            # 30599の日勤、夜勤
            if staff.can_30599 and staff.can_work_day(date):
                self.day_section[Section.d_30599] = staff
                break
            if staff.can_30599 and staff.can_work_night(date):
                self.night_section[Section.n_30599] = staff
                break
    
    # EICU, ICU freeの割り振り方　要検討！
    def assign_sub_staff(self, date, staff):
        staff = random.choice(staffs)
        if staff.can_work_day(date):
            self.day_section[Section.d_Efree].append(staff)
            self.day_section[Section.d_Ifree].append(staff)

    def section_unfilled(self)->bool:
        if (self.day_30594 != None and
            self.day_30596 != None and
            self.day_30595 != None and
            self.day_30599 != None and
            self.nig_30596 != None and
            self.nig_30595 != None and
            self.nig_30599 != None
            ):
            return True
        else:
            return False
    '''#土日祝の抽出
    def is_weekday(self)->bool:
        if self.date.weekday() < 5:
            if self.date.is_holiday():
                True
        else:
            False
    '''


# カレンダーの用意
calendar = []

class Staff():
    def __init__(self,
                name,
                rank,
                is_phd = False,
                can_30591 = False,
                can_30599 = False,
                can_30595 = False,
                can_30596 = False,
                can_30594 = False,
                ng_request = []
                ):
        self.name = name
        self.rank = rank
        self.is_phd = is_phd
        self.can_30591 = can_30591
        self.can_30599 = can_30599
        self.can_30595 = can_30595
        self.can_30596 = can_30596
        self.can_30594 = can_30594
        self.ng_request = ng_request
    
    def working_days(self):
        working_days = 0
        for date in calendar:
            if daily_sections(date).day_section[lambda x: x in Section] == self:
                working_days += 1
            if daily_sections(date).night_section[lambda x: x in Section] == self:
                working_days += 1.5
        return working_days


# スタッフ名簿
staffs = [
    Staff("mizuno", 10, is_phd = True, can_30591 = False, can_30599 = True, can_30595 = True, can_30596 = True, can_30594 =True, ng_request =[])
]


def main():
    cal_daily_section = []
    for date in calendar:
        daily_section = Daily_sections(date)
        daily_section.assign_main_staff()
        daily_section.assign_sub_staff()
        cal_daily_section.append(daily_section)
